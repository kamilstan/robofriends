{"version":3,"sources":["components/Card.js","components/RobotList.js","components/SearchingField.js","components/Scroll.js","containers/App.js","index.js"],"names":["Card","props","react_default","a","createElement","className","alt","src","concat","id","name","email","RobotList","robots","map","robot","components_Card","key","SearchingField","placeholder","onChange","change","Scroll","style","height","overflowY","border","children","App","state","searchingValue","handleSearching","e","_this","setState","target","value","_this2","this","fetch","then","response","json","users","_this$state","newRobots","filter","toLowerCase","includes","f2","components_SearchingField","length","components_Scroll","components_RobotList","Component","ReactDOM","render","src_containers_App","document","getElementById"],"mappings":"yNAgBeA,SAdF,SAACC,GACV,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2DACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAI,QAAQC,IAAG,wBAAAC,OAA0BP,EAAMQ,GAAhC,cACpBP,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAKH,EAAMS,MACXR,EAAAC,EAAAC,cAAA,SAAIH,EAAMU,WCSXC,EAdG,SAACX,GACf,IAAMW,EAAYX,EAAMY,OAAOC,IAAI,SAACC,EAAON,GAAR,OAAgBP,EAAAC,EAAAC,cAACY,EAAD,CAC/CC,IAAKF,EAAMN,GACXA,GAAIM,EAAMN,GACVC,KAAMK,EAAML,KACZC,MAAOI,EAAMJ,UAGjB,OACIT,EAAAC,EAAAC,cAAA,WACKQ,ICCEM,EAXQ,SAACjB,GAEpB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,sCAAsCc,YAAY,oBAAoBC,SAAUnB,EAAMoB,WCIpGC,EATA,SAACrB,GACZ,OACIC,EAAAC,EAAAC,cAAA,OAAKmB,MAAO,CAAEC,OAAQ,QAASC,UAAW,SAAUC,OAAQ,oBACvDzB,EAAM0B,WC4CJC,oNAxCbC,MAAS,CACPC,eAAgB,GAChBjB,OAAQ,MAIVkB,gBAAkB,SAACC,GACjBC,EAAKC,SAAS,CACZJ,eAAgBE,EAAEG,OAAOC,4FAIT,IAAAC,EAAAC,KAClBC,MAAM,6CACHC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAK,OAAIN,EAAKH,SAAS,CAAErB,OAAQ8B,uCAGlC,IAAAC,EAC4BN,KAAKT,MAAhCC,EADDc,EACCd,eACFe,EAFCD,EACiB/B,OACCiC,OAAO,SAAA/B,GAAK,OAAIA,EAAML,KAAKqC,cAAcC,SAASlB,EAAeiB,iBAC1F,OAEE7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MACbH,EAAAC,EAAAC,cAAA,MAAI6C,IAAE,GAAN,eACA/C,EAAAC,EAAAC,cAAC8C,EAAD,CAAgB7B,OAAQiB,KAAKP,kBAC3Bc,EAAUM,OAEVjD,EAAAC,EAAAC,cAACgD,EAAD,KACElD,EAAAC,EAAAC,cAACiD,EAAD,CAAWxC,OAAQgC,KAFrB3C,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAd,mBA7BQiD,cCDlBC,IAASC,OAAOtD,EAAAC,EAAAC,cAACqD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.6e826980.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <div className='card dib bg-light-blue pa3 ma3 grow shadow-4 br4 tc f5 '>\r\n            <img alt='robot' src={`https://robohash.org/${props.id}?200x200`} />\r\n            <div>\r\n                <h2>{props.name}</h2>\r\n                <p>{props.email}</p>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Card","import React from 'react';\r\nimport Card from './Card'\r\n\r\nconst RobotList = (props) => {\r\n    const RobotList = props.robots.map((robot, id) => (<Card\r\n        key={robot.id}\r\n        id={robot.id}\r\n        name={robot.name}\r\n        email={robot.email}\r\n    />))\r\n\r\n    return (\r\n        <div>\r\n            {RobotList}\r\n        </div>\r\n    )\r\n};\r\nexport default RobotList","import React from 'react';\r\n\r\n\r\nconst SearchingField = (props) => {\r\n\r\n    return (\r\n        <div className='pa2 ma2 bg-light-yellow shadow-4 br3'>\r\n            <input className='bg-light-green br3 pa2 ma2 shadow-4' placeholder='SEARCH FOR ROBOTS' onChange={props.change}></input>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SearchingField;\r\n\r\n","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ height: '800px', overflowY: 'scroll', border: '2px solid black' }}>\r\n            {props.children}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport RobotList from '../components/RobotList';\nimport SearchingField from '../components/SearchingField';\nimport Scroll from '../components/Scroll'\nimport 'tachyons';\n\nclass App extends Component {\n\n  state = ({\n    searchingValue: '',\n    robots: []\n\n  })\n\n  handleSearching = (e) => {\n    this.setState({\n      searchingValue: e.target.value,\n    })\n  }\n\n  componentDidMount() {\n    fetch('http://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ robots: users }))\n  }\n\n  render() {\n    const { searchingValue, robots } = this.state;\n    const newRobots = robots.filter(robot => robot.name.toLowerCase().includes(searchingValue.toLowerCase()))\n    return (\n\n      <div className='tc'>\n        <h1 f2>Robofriends</h1>\n        <SearchingField change={this.handleSearching} />\n        {!newRobots.length ?\n          <h1 className='tc'>Loading</h1> :\n          <Scroll>\n            <RobotList robots={newRobots} />\n          </Scroll>\n        }\n      </div>\n\n\n    )\n\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}